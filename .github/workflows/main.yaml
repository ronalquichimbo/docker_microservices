name: GitGuardian scan

on: [push, pull_request]

jobs:
  scanning:
    name: GitGuardian scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: GitGuardian scan
        uses: GitGuardian/ggshield/actions/secret@main
        with:
          args: -v
        env:
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
  lint_code:
    name: Lint Code Base
    runs-on: ubuntu-latest
    # needs: 
    #   - scnanning
    # if: needs.
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
      - name: Lint Code Base
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  python-lint:
    needs: lint_code
    runs-on: ubuntu-latest
    name: CI workflow
    steps:
    - name: checkout source repo
      uses: actions/checkout@main

    - name: linting
      uses: programmingwithalex/pylinter@main
      with:
        python-root: '.'
        flake8-flags: ''
        mypy-flags: ''
        fail-on-isort: false
        # skip-flake8: false
        # skip-mypy: false
        # skip-isort: false
        # mypy-ignore-dirs-files: ''
        # requirements-file: ''

    - name: commit isort changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add -A && git diff-index --cached --quiet HEAD || git commit -m 'isort'
    - name: push isort changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref }}


