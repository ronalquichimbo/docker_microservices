version: "2"

services:
    auth:
        build: .
        volumes:
            - ./auth:/app
        working_dir: /app
        environment:
            - FLASK_APP=app.py
            - FLASK_DEBUG=1
        command: flask run --host=0.0.0.0
        image: rvquichimbo/example_docker_compose:tagname
        ports:
            - 5000:5000
    movies:
        build: .
        volumes:
            - ./movies:/app
        working_dir: /app
        image: rvquichimbo/example_docker_compose:tagname
        environment:
            - FLASK_APP=app.py
            - FLASK_DEBUG=1
        command: flask run --host=0.0.0.0
        ports:
            - 5001:5000
    reviews:
        build: .
        volumes:
            - ./reviews:/app
        working_dir: /app
        image: rvquichimbo/example_docker_compose:tagname
        environment:
            - FLASK_APP=app.py
            - FLASK_DEBUG=1
        command: flask run --host=0.0.0.0
        ports:
            - 5002:5000
    eventos: 
        build: .
        volumes:
            - ./eventos:/app
        working_dir: /app
        image: rvquichimbo/example_docker_compose:tagname
        command: python subscriber.py
    gateway: 
        build: .
        volumes:
            - ./gateway:/app
        working_dir: /app
        image: rvquichimbo/example_docker_compose:tagname
        environment:
            - FLASK_APP=app.py
            - FLASK_DEBUG=1
        command: flask run --host=0.0.0.0
        ports:
            - 5003:5000
    mongodb:
        container_name: microservi_mongo
        image: mongo
        ports:
            - 27017:27017
        volumes:
            - mongodata:/data/db
    redis:
        container_name: microservices_redis
        image: redis
        restart: always
        ports:
            - 6379:6379

volumes:
    mongodata:

